<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wdx.lottery.infrastructure.mapper.ActivityMapper">

    <resultMap id="BaseResultMap" type="cn.wdx.lottery.infrastructure.po.Activity">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="activityId" column="activity_id" jdbcType="BIGINT"/>
            <result property="activityName" column="activity_name" jdbcType="VARCHAR"/>
            <result property="activityDesc" column="activity_desc" jdbcType="VARCHAR"/>
            <result property="beginDateTime" column="begin_date_time" jdbcType="TIMESTAMP"/>
            <result property="endDateTime" column="end_date_time" jdbcType="TIMESTAMP"/>
            <result property="stockCount" column="stock_count" jdbcType="INTEGER"/>
            <result property="takeCount" column="take_count" jdbcType="INTEGER"/>
            <result property="state" column="state" jdbcType="TINYINT"/>
            <result property="creator" column="creator" jdbcType="VARCHAR"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
            <result property="strategyId" column="strategy_id" jdbcType="BIGINT"/>
            <result property="stockSurplusCount" column="stock_surplus_count" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,activity_id,activity_name,
        activity_desc,begin_date_time,end_date_time,
        stock_count,take_count,state,
        creator,create_time,update_time
    </sql>
    
    <insert id="insertByPo" parameterType="cn.wdx.lottery.infrastructure.po.Activity">
        insert into activity
        (activity_id,activity_name,activity_desc,begin_date_time,end_date_time,
         stock_count,take_count,state,creator,create_time,update_time)
        values
        (#{activityId},#{activityName},#{activityDesc},#{beginDateTime},#{endDateTime},
         #{stockCount},#{takeCount},#{state},#{creator},now(),now())
    </insert>

    <select id="queryActivityById" parameterType="java.lang.Long" resultType="cn.wdx.lottery.infrastructure.po.Activity">
        select activity_id,activity_name,activity_desc,begin_date_time,end_date_time,
        stock_count,take_count,state,creator,create_time,update_time
        from activity
        where activity_id = #{activityId}
    </select>

    <update id="alterState" parameterType="cn.wdx.lottery.infrastructure.po.AlterState">
        update activity
        set state = #{afterState}
        where activity_id = #{activityId}
        and state = #{beforeState}
    </update>

    <update id="subtractionActivityStock" parameterType="java.lang.Long">
        update activity set stock_surplus_count = stock_surplus_count - 1
        where activity_id = #{activityId} and stock_surplus_count > 0
    </update>

    <select id="scanToDoActivityList" parameterType="java.lang.Long" resultType="cn.wdx.lottery.infrastructure.po.Activity">
        select activity_id,activity_name,begin_date_time,end_date_time,state,creator
        from activity
        where id >= #{id} and state in (4,5)
        order by id asc
        limit 10
    </select>
</mapper>
